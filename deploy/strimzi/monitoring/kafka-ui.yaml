apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-ui-config
  namespace: trading
data:
  config.yml: |
    kafka:
      clusters:
        - name: trading-cluster
          bootstrapServers: trading-kafka-bootstrap:9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: trading
  labels:
    app: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: KAFKA_CLUSTERS_0_NAME
          value: "trading-cluster"
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: "trading-kafka-bootstrap:9092"
        - name: KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL
          value: "PLAINTEXT"
        - name: KAFKA_CLUSTERS_0_KAFKA_CONNECT_0_NAME
          value: "trading-connect"
        - name: KAFKA_CLUSTERS_0_KAFKA_CONNECT_0_ADDRESS
          value: "http://trading-connect-connect-api.trading.svc:8083"
        - name: KAFKA_CLUSTERS_0_JMXPORT
          value: "9999"
        - name: DYNAMIC_CONFIG_ENABLED
          value: "false"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: trading
  labels:
    app: kafka-ui
spec:
  type: ClusterIP
  selector:
    app: kafka-ui
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kafka-ui
  namespace: trading
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: kafka-ui.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kafka-ui
            port:
              number: 8080
